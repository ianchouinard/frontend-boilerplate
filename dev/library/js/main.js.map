{"version":3,"sources":["mainES6.js"],"names":["Storage","key","val","localStorageIsSupported","localStorage","setItem","getItem","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","name","ca","split","i","length","c","charAt","substring","indexOf","testKey","storage","window","sessionStorage","removeItem","error","_storageKey","TextSizeChanger","$","on","e","preventDefault","increaseFontSize","decreaseFontSize","getSetting","html","hasClass","removeClass","addClass","saveSetting","selector","storeItem","stored","StCore","options","initialize","TextResizer","main","Test","tst","sitename","console","log","Site","test","MainScripts","svg4everybody"],"mappings":"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","file":"main.js","sourcesContent":["class Storage {\r\n\r\n    /*\r\n        :: Local Storage\r\n    */\r\n    static storeItem(key, val) {\r\n        if (this.localStorageIsSupported()) {\r\n            localStorage.setItem(key, val);\r\n        }\r\n    }\r\n\r\n    static getItem(key) {\r\n        if (this.localStorageIsSupported()) {\r\n            return localStorage.getItem(key);\r\n        }\r\n    }\r\n\r\n    /*\r\n        :: Cookies\r\n    */\r\n    static setCookie(cname, cvalue, exdays) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + (exdays*24*60*60*1000));\r\n        const expires = \"expires=\"+d.toUTCString();\r\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n    }\r\n\r\n    static getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for(var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    /*\r\n        :: Helpers\r\n    */\r\n    static localStorageIsSupported() {\r\n        let testKey = 'test', storage = window.sessionStorage;\r\n        try {\r\n            storage.setItem(testKey, '1');\r\n            storage.removeItem(testKey);\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\n\n/*\r\n    :: ADA Text Resizer\r\n    --------------------\r\n    The html gets a base font size of 62.5% to set a 1:10 font ratio\r\n        EX: font-size: 20px; = font-size: 2rem;\r\n    On increase or decrease, the html will get different classes\r\n\r\n*/\r\nconst _storageKey = 'text_sizer_value';\r\n\r\nclass TextSizeChanger {\r\n\r\n    static main() {\r\n        $('.text-size-button.increase').on('click', (e) => {\r\n            e.preventDefault();\r\n            this.increaseFontSize();\r\n        });\r\n        $('.text-size-button.decrease').on('click', (e) => {\r\n            e.preventDefault();\r\n            this.decreaseFontSize();\r\n        });\r\n\r\n        this.getSetting();\r\n    }\r\n\r\n    static increaseFontSize() {\r\n        const html = $(('html'));\r\n\r\n        if(html.hasClass(\"text-large\")) {\r\n            html.removeClass(\"text-large\");\r\n            html.addClass(\"text-larger\");\r\n            this.saveSetting(\"text-larger\");\r\n        }\r\n        else {\r\n            if(html.hasClass(\"text-larger\")) {\r\n                html.removeClass(\"text-larger\");\r\n                html.addClass(\"text-largest\");\r\n                this.saveSetting(\"text-largest\");\r\n            }\r\n            else {\r\n                if(!html.hasClass(\"text-largest\")) {\r\n                    html.addClass(\"text-large\");\r\n                    this.saveSetting(\"text-large\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static decreaseFontSize() {\r\n        const html = $(('html'));\r\n\r\n        if(html.hasClass(\"text-large\")) {\r\n            html.removeClass(\"text-large\");\r\n            localStorage.removeItem(_storageKey);\r\n        }\r\n        else {\r\n            if(html.hasClass(\"text-larger\")) {\r\n                html.removeClass(\"text-larger\");\r\n                html.addClass(\"text-large\");\r\n                this.saveSetting(\"text-large\");\r\n            }\r\n            else {\r\n                if(html.hasClass(\"text-largest\")) {\r\n                    html.removeClass(\"text-largest\");\r\n                    html.addClass(\"text-larger\");\r\n                    this.saveSetting(\"text-larger\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n        :: Helpers\r\n    */\r\n    static saveSetting(selector) {\r\n        Storage.storeItem(_storageKey, selector);\r\n    }\r\n\r\n    static getSetting(key) {\r\n        let stored = Storage.getItem(_storageKey);\r\n        if (stored) {\r\n            $(('html')).addClass(stored);\r\n        }\r\n    }\r\n\r\n}\n\n/*\r\n    :: Core ST Front End boilerplate Javascript Build\r\n*/\r\nclass StCore {\r\n\r\n    static main(options) {\r\n        if (options.initialize.TextResizer) {\r\n            TextSizeChanger.main();\r\n        }\r\n    }\r\n\r\n}\n\nclass Test {\r\n\r\n    constructor() {\r\n        this.tst = 'A test from: ';\r\n    }\r\n\r\n    test(sitename) {\r\n        console.log(`${this.tst}${sitename}`);\r\n    }\r\n\r\n}\n\n/*\r\n    :: Site Specific javascript modules\r\n*/\r\nclass Site {\r\n\r\n    static main() {\r\n        const test = new Test();\r\n        test.test('Boilerplate');\r\n    }\r\n\r\n}\n\nconst MainScripts = (() => {\r\n\r\n    /*\r\n        :: Initialize core st boilerplate modules\r\n    */\r\n    StCore.main({\r\n        initialize: {\r\n            TextResizer: true\r\n        }\r\n    });\r\n    /*\r\n        :: Initialize website/project specific modules\r\n    */\r\n    Site.main();\r\n    /*\r\n        :: Initialize third party plugins\r\n    */\r\n    // SVG <use> polyfill for IE and Edge\r\n    if (typeof svg4everybody == 'function') {\r\n        svg4everybody();\r\n    }\r\n\r\n})();\n"]}